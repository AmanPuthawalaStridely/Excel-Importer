using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace Excel_Importer
{
    // Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
    // To generate Base64 string for Images below, you can use https://www.base64-image.de/
    [Export(typeof(IXrmToolBoxPlugin)),
        ExportMetadata("Name", "Excel Importer"),
        ExportMetadata("Description", "This is a description for my first plugin"),
        // Please specify the base64 content of a 32x32 pixels image
        ExportMetadata("SmallImageBase64", "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"),
        // Please specify the base64 content of a 80x80 pixels image
        ExportMetadata("BigImageBase64", "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"),
        ExportMetadata("BackgroundColor", "Lavender"),
        ExportMetadata("PrimaryFontColor", "Black"),
        ExportMetadata("SecondaryFontColor", "Gray")]
    public class MyPlugin : PluginBase
    {
        public override IXrmToolBoxPluginControl GetControl()
        {
            return new MyPluginControl();
        }

        /// <summary>
        /// Constructor 
        /// </summary>
        public MyPlugin()
        {
            // If you have external assemblies that you need to load, uncomment the following to 
            // hook into the event that will fire when an Assembly fails to resolve
            // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
        }

        /// <summary>
        /// Event fired by CLR when an assembly reference fails to load
        /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
        /// For example, a folder named Sample.XrmToolBox.MyPlugin 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="args"></param>
        /// <returns></returns>
        private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
        {
            Assembly loadAssembly = null;
            Assembly currAssembly = Assembly.GetExecutingAssembly();

            // base name of the assembly that failed to resolve
            var argName = args.Name.Substring(0, args.Name.IndexOf(","));

            // check to see if the failing assembly is one that we reference.
            List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
            var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

            // if the current unresolved assembly is referenced by our plugin, attempt to load
            if (refAssembly != null)
            {
                // load from the path to this plugin assembly, not host executable
                string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
                string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
                dir = Path.Combine(dir, folder);

                var assmbPath = Path.Combine(dir, $"{argName}.dll");

                if (File.Exists(assmbPath))
                {
                    loadAssembly = Assembly.LoadFrom(assmbPath);
                }
                else
                {
                    throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
                }
            }

            return loadAssembly;

        }

    }
}